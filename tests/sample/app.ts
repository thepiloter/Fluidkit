/**
 * Auto-generated by FluidKit from FastAPI routes and models - DO NOT EDIT
 * Changes will be overwritten on regeneration.
 */

import type { ApiResult } from '../../src/lib/.fluidkit/runtime';
import { getBaseUrl, handleResponse } from '../../src/lib/.fluidkit/runtime';

/**
 * GET /
 */
export const root = async (options?: RequestInit): Promise<ApiResult<any>> => {
  let url = `${getBaseUrl()}/`;

  const requestOptions: RequestInit = {
    method: 'GET',
    headers: options?.headers,
    ...options
  };

  const response = await fetch(url, requestOptions);
  return handleResponse(response);
};

/**
 * GET /health
 */
export const health_check = async (options?: RequestInit): Promise<ApiResult<any>> => {
  let url = `${getBaseUrl()}/health`;

  const requestOptions: RequestInit = {
    method: 'GET',
    headers: options?.headers,
    ...options
  };

  const response = await fetch(url, requestOptions);
  return handleResponse(response);
};